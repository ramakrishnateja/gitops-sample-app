parameters:
- name: Environment
  type: string
- name: GitUserEmail
  type: string
- name: KustomizeImageName
  type: string
- name: ContainerRegistryName
  type: string
- name: ContainerImageName
  type: string


steps:
- checkout: manifests
  persistCredentials: true

#- task: qetza.replacetokens.replacetokens-task.replacetokens@3
#  inputs:
#    actionOnMissing: 'log warning'
#    rootDirectory: $(Pipeline.Workspace)/s/${{ lower(parameters.Environment) }}
#    targetFiles: |
#      **
#    tokenPrefix: '#{'
#    tokenSuffix: '}#'
#    keepToken: true
#    inlineVariables: |
#      PlanUrl: $(system.CollectionUri)
#      ProjectId: $(system.TeamProjectId)
#      HubName: $(system.HostType)
#      PlanId: $(system.PlanId)
#      JobId: $(system.JobId)
#      TimelineId: $(system.TimelineId)
#      TaskInstanceId: $(system.TaskInstanceId)
#  displayName: Enrich AzDevops Parameters

- task: Bash@3
  name: UpdateImage
  inputs:
    targetType: 'inline'
    workingDirectory: $(Pipeline.Workspace)/s
    script: |
      git config --global user.email ${{ parameters.GitUserEmail }}
      git config --global user.name "Azure Pipelines"
      git checkout -b deploy
      cd ${{ lower(parameters.Environment) }}
      kustomize edit set image ${{ parameters.KustomizeImageName }}=${{ parameters.ContainerRegistryName }}/${{ parameters.ContainerImageName }}:$(Build.SourceVersion)
      cd ../
      git add .
      echo "##vso[task.setvariable variable=GIT_STATUS;isOutput=True]$(git status --porcelain | head -1)"
      echo "Git Status is $(GIT_STATUS)"
      git commit -m "Gitops Image Change for ${{ parameters.Environment }} with ${{ parameters.ContainerRegistryName }}/${{ parameters.ContainerImageName }}:$(Build.SourceVersion)"
      git push --set-upstream origin HEAD:deploy
  displayName: Update Image
  
