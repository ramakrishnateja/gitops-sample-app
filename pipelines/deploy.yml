parameters:
- name: GitUserEmail
  type: string
- name: KustomizeImageName
  type: string
- name: ContainerImageName
  type: string
- name: ApplicationName
  type: string
  
- name: Stages
  type: object
  default:
    - name: Dev
      branchName: Dev
      containerRegistryName: 'pulllogictejacontainerregistry.azurecr.io'
      containerRegistryServiceConnectionName: 'pulllogictejacontainerregistry'
      gitopsEnvironmentPath: 'dev'
      previousStage: ''
      previousStageContainerRegistryName: ''
      previousStageContainerRegistryServiceConnectionName: ''
      devopsEnvironmentName: 'Dev'

stages:
- ${{ each deploymentStage in parameters.Stages }}:
    - stage: promote${{ lower(deploymentStage.name) }}
      displayName: Promote ${{ deploymentStage.Name }}
      ${{ if eq(parameters.previousStage, '') }}:
        dependsOn: DockerBuild
      ${{ if ne(parameters.previousStage, '') }}:
        dependsOn: promote${{ lower(deploymentStage.name) }}
        condition: succeeded()
      jobs:
        - deployment: Promote
          environment: ${{ deploymentStage.devopsEnvironmentName }}
          displayName: Promote
          strategy:
            runOnce:
              deploy:
                steps:
                - ${{ if ne(parameters.previousStage, '') }}:
                  - template: ./container-promote.yml
                    parameters:
                    ToRegistryServiceConnection: ${{ deploymentStage.containerRegistryServiceConnectionName }}
                    FromRegistryServiceConnection: ${{ deploymentStage.previousStageContainerRegistryServiceConnectionName }}
                    FromRegistry: ${{ deploymentStage.previousStageContainerRegistryName }}
                    ToRegistry: ${{ deploymentStage.containerRegistryName }}
                    ImageName: ${{ parameters.ContainerImageName }}

                - template: ./update-manifests.yml
                  parameters:
                    Environment: ${{ deploymentStage.gitopsEnvironmentPath }}
                    GitUserEmail: ${{ parameters.GitUserEmail }}
                    KustomizeImageName: ${{ parameters.KustomizeImageName }}
                    ContainerRegistryName: ${{ deploymentStage.containerRegistryName }}
                    ContainerImageName: ${{ parameters.ContainerImageName }}

        - job: GitopsDeploy
          dependsOn: Promote
          variables:
            GIT_STATUS: $[dependencies.Promote.UpdateImage.outputs['setVariable.GIT_STATUS']]
          displayName: Wait for changes to be applied
          pool: server
          steps:
          - task: InvokeRESTAPI@1
            #condition: ne(variables['GIT_STATUS'], '')
            inputs:
              connectionType: 'connectedServiceName'
              serviceConnection: '$(GitopsCICDConnectorServiceConnection)'
              urlSuffix: 'azdo/createprandmerge'
              method: 'POST'
              body: |
                {
                  "applicationKey": "${{ parameters.ApplicationName }}-${{ lower(deploymentStage.name) }}",
                  "title": "Merging PR $(PR_NUM) to master",
                  "organizationName": "$(OrganizationName)",
                  "repositoryType": "$(RepositoryType)",
                  "repositoryName": "${{ parameters.ApplicationName }}-config",
                  "targetBranch": "$(TargetBranch)",
                  "sourceBranch": "$(SourceBranch)",
                  "authToken": "$(AuthToken)"
                }
              waitForCompletion: 'true'
              completionEvent: 'Callback'

        - job: Rollback
          dependsOn: GitopsDeploy
          condition: failed()
          displayName: Rollback ${{ deploymentStage.Name }}
            
            

            
